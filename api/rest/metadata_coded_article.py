"""
CodedArticleViewSet is a pseudo-modelview; that is, it's not a one-to-one projection
of CodedArticle. Instead - due to legacy reasons - it only has four real fields (comments,
status, article and codingjob) while the rest are 'fake' fields refering to fields on
the Article model.

In previous versions of Django Rest Framework, metadata was generated by the ViewSet itself,
instead of an external class. This made it easy to override the generation and add the fake
fields manually. This has become less obvious and thus this hack was born..
"""

CODED_ARTICLE_METADATA = {
    "label": "{label}",
    "models": {
        "status": "/api/v4/codedarticlestatus",
        "article": "/api/v4/article",
        "codingjob": "/api/v4/codingjob",
    },
    "fields": {
        "status": "ModelChoiceField", # Real
        "title": "SerializerMethodField",
        "medium": "SerializerMethodField",
        "codingjob": "ModelChoiceField", # Real
        "comments": "CharField", # Real
        "length": "SerializerMethodField",
        "date": "SerializerMethodField",
        "article": "ModelChoiceField", # Real
        "pagenr": "SerializerMethodField",
        "article_id": "SerializerMethodField",
        "id": "IntegerField"
    },
    "filter_fields": [
        "pk",
        "article__id",
        "codingjob__id",
        "codings__id",
        "comments",
        "id",
        "status__id",
        "article__pagenr"
    ]
}
