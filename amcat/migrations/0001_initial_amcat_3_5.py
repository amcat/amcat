# -*- coding: utf-8 -*-
# Generated by Django 1.9.8 on 2016-07-29 00:53
from __future__ import unicode_literals

import amcat.forms.fields
import amcat.tools.djangotoolkit
import amcat.tools.model
from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django_hash_field


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AmCAT',
            fields=[
                ('id', models.BooleanField(db_column='singleton_pk', default=False, primary_key=True, serialize=False)),
                ('global_announcement', models.TextField(blank=True, null=True)),
                ('db_version', models.IntegerField()),
            ],
            options={
                'db_table': 'amcat_system',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(db_column='article_id', primary_key=True, serialize=False)),
                ('date', models.DateTimeField()),
                ('title', models.TextField()),
                ('url', models.TextField(blank=True, max_length=750, null=True)),
                ('text', models.TextField()),
                ('hash', django_hash_field.HashField(db_index=True, max_length=16, unique=True)),
                ('parent_hash', django_hash_field.HashField(blank=True, db_index=True, max_length=16, null=True)),
                ('properties', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
            options={
                'db_table': 'articles',
            },
        ),
        migrations.CreateModel(
            name='ArticleSet',
            fields=[
                ('id', models.AutoField(db_column='articleset_id', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('provenance', models.TextField(null=True)),
                ('featured', models.BooleanField(default=False)),
                ('articles', models.ManyToManyField(related_name='articlesets_set', to='amcat.Article')),
            ],
            options={
                'db_table': 'articlesets',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Code',
            fields=[
                ('id', models.AutoField(db_column='code_id', primary_key=True, serialize=False)),
                ('label', models.TextField()),
                ('uuid', amcat.tools.model.PostgresNativeUUIDField(blank=True, db_index=True, editable=False, unique=True)),
            ],
            options={
                'db_table': 'codes',
            },
        ),
        migrations.CreateModel(
            name='Codebook',
            fields=[
                ('id', models.AutoField(db_column='codebook_id', primary_key=True, serialize=False)),
                ('name', models.TextField()),
            ],
            options={
                'db_table': 'codebooks',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CodebookCode',
            fields=[
                ('id', models.AutoField(db_column='codebook_object_id', primary_key=True, serialize=False)),
                ('hide', models.BooleanField(default=False)),
                ('validfrom', models.DateTimeField(null=True)),
                ('validto', models.DateTimeField(null=True)),
                ('ordernr', models.IntegerField(db_index=True, default=0, help_text='Annotator should order according codes according to this number.')),
                ('code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='codebook_codes', to='amcat.Code')),
                ('codebook', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='amcat.Codebook')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='amcat.Code')),
            ],
            options={
                'db_table': 'codebooks_codes',
                'ordering': ('ordernr',),
            },
        ),
        migrations.CreateModel(
            name='CodedArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comments', models.TextField(blank=True, null=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coded_articles', to='amcat.Article')),
            ],
            options={
                'db_table': 'coded_articles',
            },
        ),
        migrations.CreateModel(
            name='CodedArticleStatus',
            fields=[
                ('id', models.IntegerField(db_column='status_id', primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'coded_article_status',
            },
        ),
        migrations.CreateModel(
            name='Coding',
            fields=[
                ('id', models.AutoField(db_column='coding_id', primary_key=True, serialize=False)),
                ('start', models.SmallIntegerField(null=True)),
                ('end', models.SmallIntegerField(null=True)),
                ('coded_article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='codings', to='amcat.CodedArticle')),
            ],
            options={
                'db_table': 'codings',
            },
        ),
        migrations.CreateModel(
            name='CodingJob',
            fields=[
                ('id', models.AutoField(db_column='codingjob_id', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('insertdate', models.DateTimeField(auto_now_add=True)),
                ('archived', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'codingjobs',
                'ordering': ('project', '-id'),
            },
        ),
        migrations.CreateModel(
            name='CodingRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=75)),
                ('condition', models.TextField()),
            ],
            options={
                'db_table': 'codingrules',
            },
        ),
        migrations.CreateModel(
            name='CodingRuleAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=50)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'codingruleactions',
            },
        ),
        migrations.CreateModel(
            name='CodingSchema',
            fields=[
                ('id', models.AutoField(db_column='codingschema_id', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=75)),
                ('description', models.TextField(null=True)),
                ('isarticleschema', models.BooleanField(default=False)),
                ('subsentences', models.BooleanField(default=False, help_text='Allow subsentences to be coded.')),
            ],
            options={
                'db_table': 'codingschemas',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CodingSchemaField',
            fields=[
                ('id', models.AutoField(db_column='codingschemafield_id', primary_key=True, serialize=False)),
                ('fieldnr', models.IntegerField(default=0)),
                ('label', models.TextField()),
                ('required', models.BooleanField(default=True)),
                ('split_codebook', models.BooleanField(default=False, help_text='Do not display a list of all codes in annotator, but let the user first choose a root and then one of its descendants.')),
                ('default', models.CharField(blank=True, db_column='deflt', max_length=50, null=True)),
                ('codebook', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='amcat.Codebook')),
                ('codingschema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='amcat.CodingSchema')),
            ],
            options={
                'db_table': 'codingschemas_fields',
            },
        ),
        migrations.CreateModel(
            name='CodingSchemaFieldType',
            fields=[
                ('id', models.IntegerField(db_column='fieldtype_id', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('serialiserclassname', models.CharField(db_column='serialiserclass', max_length=50)),
            ],
            options={
                'db_table': 'codingschemas_fieldtypes',
            },
        ),
        migrations.CreateModel(
            name='CodingValue',
            fields=[
                ('id', models.AutoField(db_column='codingvalue_id', primary_key=True, serialize=False)),
                ('strval', models.CharField(blank=True, max_length=1000, null=True)),
                ('intval', models.IntegerField(null=True)),
                ('coding', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='amcat.Coding')),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='amcat.CodingSchemaField')),
            ],
            options={
                'db_table': 'codings_values',
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(db_column='label_id', primary_key=True, serialize=False)),
                ('label', models.TextField()),
                ('code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='labels', to='amcat.Code')),
            ],
            options={
                'db_table': 'codes_labels',
                'ordering': ('language__id',),
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(db_column='language_id', primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'languages',
            },
        ),
        migrations.CreateModel(
            name='Plugin',
            fields=[
                ('id', models.AutoField(db_column='plugin_id', primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=100, unique=True)),
                ('class_name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'plugins',
            },
        ),
        migrations.CreateModel(
            name='PluginType',
            fields=[
                ('id', models.AutoField(db_column='plugintype_id', primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=100, unique=True)),
                ('class_name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'plugintypes',
            },
        ),
        migrations.CreateModel(
            name='Privilege',
            fields=[
                ('id', models.AutoField(db_column='privilege_id', primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'privileges',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(db_column='project_id', editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=200, null=True)),
                ('insert_date', models.DateTimeField(auto_now_add=True, db_column='insertdate')),
                ('active', models.BooleanField(default=True)),
                ('articlesets', models.ManyToManyField(related_name='projects_set', to='amcat.ArticleSet')),
                ('codebooks', models.ManyToManyField(related_name='projects_set', to='amcat.Codebook')),
                ('codingschemas', models.ManyToManyField(related_name='projects_set', to='amcat.CodingSchema')),
                ('favourite_articlesets', models.ManyToManyField(related_name='favourite_of_projects', to='amcat.ArticleSet')),
            ],
            options={
                'db_table': 'projects',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ProjectRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='amcat.Project')),
            ],
            options={
                'db_table': 'projects_users_roles',
            },
        ),
        migrations.CreateModel(
            name='Query',
            fields=[
                ('id', models.AutoField(db_column='query_id', primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('parameters', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('last_saved', models.DateTimeField(auto_now=True, db_index=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='amcat.Project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'queries',
                'ordering': ('-last_saved',),
            },
        ),
        migrations.CreateModel(
            name='RecentProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_visited', models.DateTimeField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='last_visited_at', to='amcat.Project')),
            ],
            options={
                'db_table': 'user_recent_projects',
                'ordering': ['date_visited'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(db_column='role_id', primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=50)),
                ('projectlevel', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'roles',
            },
        ),
        migrations.CreateModel(
            name='Sentence',
            fields=[
                ('id', models.AutoField(db_column='sentence_id', primary_key=True, serialize=False)),
                ('sentence', models.TextField()),
                ('parnr', models.IntegerField()),
                ('sentnr', models.IntegerField()),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sentences', to='amcat.Article')),
            ],
            options={
                'db_table': 'sentences',
                'ordering': ['article', 'parnr', 'sentnr'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', amcat.tools.model.PostgresNativeUUIDField(blank=True, db_index=True, editable=False, unique=True)),
                ('handler_class_name', models.TextField()),
                ('class_name', models.TextField()),
                ('arguments', django.contrib.postgres.fields.jsonb.JSONField(default={})),
                ('issued_at', models.DateTimeField(auto_now_add=True)),
                ('persistent', models.BooleanField(default=False)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='amcat.Project')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tasks',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.CharField(choices=[('AmCAT', 'AmCAT'), ('Pink', 'Pink'), ('Pink Dreamliner', 'Pink Dreamliner'), ('Darkly', 'Darkly'), ('Amelia', 'Amelia')], default='AmCAT', max_length=255)),
                ('fluid', models.BooleanField(default=False, help_text='Use fluid layout')),
                ('favourite_projects', models.ManyToManyField(related_name='favourite_users', to='amcat.Project')),
                ('recent_projects', models.ManyToManyField(related_name='recent_projects', through='amcat.RecentProject', to='amcat.Project')),
                ('role', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='amcat.Role')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'auth_user_profile',
            },
        ),
        migrations.AlterUniqueTogether(
            name='role',
            unique_together=set([('label', 'projectlevel')]),
        ),
        migrations.AddField(
            model_name='recentproject',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='amcat.UserProfile'),
        ),
        migrations.AddField(
            model_name='projectrole',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='amcat.Role'),
        ),
        migrations.AddField(
            model_name='projectrole',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='guest_role',
            field=models.ForeignKey(default=11, null=True, on_delete=django.db.models.deletion.CASCADE, to='amcat.Role'),
        ),
        migrations.AddField(
            model_name='project',
            name='insert_user',
            field=models.ForeignKey(db_column='insertuser_id', editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inserted_project', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='owner',
            field=models.ForeignKey(db_column='owner_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='privilege',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='amcat.Role'),
        ),
        migrations.AddField(
            model_name='plugin',
            name='plugin_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='plugins', to='amcat.PluginType'),
        ),
        migrations.AddField(
            model_name='label',
            name='language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='labels', to='amcat.Language'),
        ),
        migrations.AddField(
            model_name='codingschemafield',
            name='fieldtype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='amcat.CodingSchemaFieldType'),
        ),
        migrations.AddField(
            model_name='codingschema',
            name='highlight_language',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='amcat.Language'),
        ),
        migrations.AddField(
            model_name='codingschema',
            name='highlighters',
            field=models.ManyToManyField(to='amcat.Codebook'),
        ),
        migrations.AddField(
            model_name='codingschema',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='amcat.Project'),
        ),
        migrations.AddField(
            model_name='codingrule',
            name='action',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='amcat.CodingRuleAction'),
        ),
        migrations.AddField(
            model_name='codingrule',
            name='codingschema',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='amcat.CodingSchema'),
        ),
        migrations.AddField(
            model_name='codingrule',
            name='field',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='amcat.CodingSchemaField'),
        ),
        migrations.AddField(
            model_name='codingjob',
            name='articleschema',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='codingjobs_article', to='amcat.CodingSchema'),
        ),
        migrations.AddField(
            model_name='codingjob',
            name='articleset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='codingjob_set', to='amcat.ArticleSet'),
        ),
        migrations.AddField(
            model_name='codingjob',
            name='coder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='codingjob',
            name='insertuser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='codingjob',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='amcat.Project'),
        ),
        migrations.AddField(
            model_name='codingjob',
            name='unitschema',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='codingjobs_unit', to='amcat.CodingSchema'),
        ),
        migrations.AddField(
            model_name='coding',
            name='sentence',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='amcat.Sentence'),
        ),
        migrations.AddField(
            model_name='codedarticle',
            name='codingjob',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coded_articles', to='amcat.CodingJob'),
        ),
        migrations.AddField(
            model_name='codedarticle',
            name='status',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='amcat.CodedArticleStatus'),
        ),
        migrations.AddField(
            model_name='codebook',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='amcat.Project'),
        ),
        migrations.AddField(
            model_name='articleset',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articlesets_set', to='amcat.Project'),
        ),
        migrations.AddField(
            model_name='article',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='amcat.Project'),
        ),
        migrations.AlterUniqueTogether(
            name='sentence',
            unique_together=set([('article', 'parnr', 'sentnr')]),
        ),
        migrations.AlterUniqueTogether(
            name='recentproject',
            unique_together=set([('user', 'project')]),
        ),
        migrations.AlterUniqueTogether(
            name='projectrole',
            unique_together=set([('project', 'user')]),
        ),
        migrations.AlterUniqueTogether(
            name='label',
            unique_together=set([('code', 'language')]),
        ),
        migrations.AlterUniqueTogether(
            name='codingvalue',
            unique_together=set([('coding', 'field')]),
        ),
        migrations.AlterUniqueTogether(
            name='codedarticle',
            unique_together=set([('codingjob', 'article')]),
        ),
    ]
